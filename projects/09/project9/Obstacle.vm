function Obstacle.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push pointer 0
return
function Obstacle.setXY 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
return
function Obstacle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Obstacle.getX 0
push argument 0
pop pointer 0
push this 0
return
function Obstacle.getY 0
push argument 0
pop pointer 0
push this 1
return
function Obstacle.getActive 0
push argument 0
pop pointer 0
push this 2
return
function Obstacle.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 32
add
push this 1
push constant 10
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Obstacle.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push constant 32
add
push this 1
push constant 10
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Obstacle.fire 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call Obstacle.setXY 3
pop temp 0
push pointer 0
push argument 3
call Obstacle.activate 2
pop temp 0
push constant 0
return
function Obstacle.run 0
push argument 0
pop pointer 0
push this 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
call Obstacle.move 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Obstacle.activate 0
push argument 0
pop pointer 0
push constant 0
not
pop this 2
push pointer 0
push argument 1
call Obstacle.move 2
pop temp 0
push constant 0
return
function Obstacle.deactivate 0
push argument 0
pop pointer 0
push constant 0
pop this 2
push pointer 0
call Obstacle.erase 1
pop temp 0
push constant 0
return
function Obstacle.move 0
push argument 0
pop pointer 0
push this 2
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push constant 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Obstacle.erase 1
pop temp 0
push this 0
push constant 2
sub
pop this 0
push pointer 0
call Obstacle.draw 1
pop temp 0
goto IF_END1
label IF_FALSE1
push argument 1
call Jumper.erase 1
pop temp 0
push argument 1
push constant 0
push constant 0
call Jumper.setposition 3
pop temp 0
push argument 1
call Jumper.draw 1
pop temp 0
push pointer 0
call Obstacle.deactivate 1
pop temp 0
label IF_END1
push constant 0
return
