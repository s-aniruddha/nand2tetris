
# strip whitespaces everywhere in the given string
def stripspaces(s):
    res = ''
    for i in s:
        if not i.isspace():
            res += i
    return res

# assembler that generates no-label, no-symbol assembly code
def assembler(infile, outfile):
    # initialize symbol table with well-known symbols
    symboltable = {
        '0' : '0',
        '1' : '1',
        '2' : '2',
        '3' : '3',
        '4' : '4',
        '5' : '5',
        '6' : '6',
        '7' : '7',
        '8' : '8',
        '9' : '9',
        '10' : '10',
        '11' : '11',
        '12' : '12',
        '13' : '13',
        '14' : '14',
        '15' : '15',   
        'R0' : '0',
        'R1' : '1',
        'R2' : '2',
        'R3' : '3',
        'R4' : '4',
        'R5' : '5',
        'R6' : '6',
        'R7' : '7',
        'R8' : '8',
        'R9' : '9',
        'R10' : '10',
        'R11' : '11',
        'R12' : '12',
        'R13' : '13',
        'R14' : '14',
        'R15' : '15',
        'SCREEN' :  '16384',
        'KBD' :  '24576',
        'SP' : '0',
        'LCL' : '1',
        'ARG' : '2',
        'THIS' : '3',
        'THAT' : '4',
        'LOOP' : '4',
        'STOP' : '18',
        'END' : '22',
        'i' : '16',
        'sum' : '17'
    }
    
    lines = []
    # collect lines from input file into a list
    with open (infile,"r") as fin:
        for line in fin: 
            line = stripspaces(line)
            if line == "":
                continue
            if line[0:2] == '//':
                continue
            # remove comment at the end of the statement, if any
            idx = line.find("//")
            if idx == -1:
                idx = len(line)
            lines.append(line[0:idx])

    # collect labels into symbol table
    for line in lines:    
        label = ''
        linenumber = -1
                
        if line[0] == '(':
            for i in line:
                if i != "(" and i != ")":
                    label += i 
            symboltable[label] = str(linenumber + 1)   
        else:
            linenumber += 1

    # collect variables into symbol table
    for line in lines:
        count = 16  # first variable slot
        if line[0] == '@':
            sym = line[1:] 
            if sym not in symboltable:
                symboltable[sym] = str(count)
                count += 1

    # assemble and write output for each line
    with open (outfile,"w") as fout:
        for line in lines:
            if line[0] == '@':
                fout.write('@'+ symboltable[line[1:]]+'\n') 
            elif line[0] != '(':
                fout.write(line + '\n')

import sys
# pass input, output filenames from command line
assembler(infile=sys.argv[1],outfile=sys.argv[2])